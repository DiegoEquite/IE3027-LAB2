

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 05 21:26:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362                           
   363                           	psect	nvCOMMON
   364  0076                     __pnvCOMMON:	
   365  0076                     _vanalog:	
   366  0076                     	ds	1
   367  001E                     _ADRESH	set	30
   368  001F                     _ADCON0bits	set	31
   369  0006                     _PORTB	set	6
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  0005                     _PORTA	set	5
   373  0001                     _TMR0	set	1
   374  000B                     _INTCONbits	set	11
   375  0086                     _TRISBbits	set	134
   376  0089                     _TRISEbits	set	137
   377  0085                     _TRISAbits	set	133
   378  009F                     _ADCON1	set	159
   379  0081                     _OPTION_REGbits	set	129
   380  008F                     _OSCCON	set	143
   381  0088                     _TRISD	set	136
   382  0087                     _TRISC	set	135
   383  0086                     _TRISB	set	134
   384  0085                     _TRISA	set	133
   385  0189                     _ANSELHbits	set	393
   386  0188                     _ANSELbits	set	392
   387                           
   388                           ; #config settings
   389  0000                     
   390                           	psect	cinit
   391  000F                     start_initialization:	
   392  000F                     __initialization:	
   393  000F                     end_of_initialization:	
   394                           ;End of C runtime variable initialization code
   395                           
   396  000F                     __end_of__initialization:	
   397  000F  0183               	clrf	3
   398  0010  120A  118A  2973   	ljmp	_main	;jump to C main() function
   399                           
   400                           	psect	cstackCOMMON
   401  0070                     __pcstackCOMMON:	
   402  0070                     ?_configIO:	
   403  0070                     ?_configADC:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_lecADC:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_segmentos:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_ISR:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_ISR:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_main:	
   419                           ; 1 bytes @ 0x0
   420                           
   421                           
   422                           ; 1 bytes @ 0x0
   423  0070                     	ds	2
   424  0072                     ??_configIO:	
   425  0072                     ??_configADC:	
   426                           ; 1 bytes @ 0x2
   427                           
   428  0072                     ??_lecADC:	
   429                           ; 1 bytes @ 0x2
   430                           
   431  0072                     ??_segmentos:	
   432                           ; 1 bytes @ 0x2
   433                           
   434                           
   435                           ; 1 bytes @ 0x2
   436  0072                     	ds	2
   437  0074                     lecADC@x:	
   438  0074                     segmentos@numero:	
   439                           ; 1 bytes @ 0x4
   440                           
   441                           
   442                           ; 1 bytes @ 0x4
   443  0074                     	ds	1
   444  0075                     ??_main:	
   445                           
   446                           ; 1 bytes @ 0x5
   447  0075                     	ds	1
   448                           
   449                           	psect	maintext
   450  0173                     __pmaintext:	
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 41 in file "Lab2.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : B00/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          1       0       0       0       0
   473 ;;      Totals:         1       0       0       0       0
   474 ;;Total ram usage:        1 bytes
   475 ;; Hardware stack levels required when called:    2
   476 ;; This function calls:
   477 ;;		_configADC
   478 ;;		_configIO
   479 ;;		_lecADC
   480 ;;		_segmentos
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _main
   488  0173                     _main:	
   489  0173                     l925:	
   490                           ;incstack = 0
   491                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   492                           
   493                           
   494                           ;Lab2.c: 42:     configIO();
   495  0173  120A  118A  2197  120A  118A  	fcall	_configIO
   496                           
   497                           ;Lab2.c: 43:     configADC();
   498  0178  120A  118A  21C9  120A  118A  	fcall	_configADC
   499  017D                     l927:	
   500                           
   501                           ;Lab2.c: 45:         vanalog=lecADC(8);
   502  017D  3008               	movlw	8
   503  017E  120A  118A  2013  120A  118A  	fcall	_lecADC
   504  0183  00F5               	movwf	??_main
   505  0184  0875               	movf	??_main,w
   506  0185  00F6               	movwf	_vanalog
   507  0186                     l929:	
   508                           
   509                           ;Lab2.c: 46:         PORTC=vanalog;
   510  0186  0876               	movf	_vanalog,w
   511  0187  1283               	bcf	3,5	;RP0=0, select bank0
   512  0188  1303               	bcf	3,6	;RP1=0, select bank0
   513  0189  0087               	movwf	7	;volatile
   514  018A                     l931:	
   515                           
   516                           ;Lab2.c: 47:         PORTD=segmentos(0);
   517  018A  3000               	movlw	0
   518  018B  120A  118A  2114  120A  118A  	fcall	_segmentos
   519  0190  1283               	bcf	3,5	;RP0=0, select bank0
   520  0191  1303               	bcf	3,6	;RP1=0, select bank0
   521  0192  0088               	movwf	8	;volatile
   522  0193  297D               	goto	l927
   523  0194  120A  118A  280C   	ljmp	start
   524  0197                     __end_of_main:	
   525                           
   526                           	psect	text1
   527  0114                     __ptext1:	
   528 ;; *************** function _segmentos *****************
   529 ;; Defined at:
   530 ;;		line 5 in file "7segmentos.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  numero          1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  numero          1    4[COMMON] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      unsigned char 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         1       0       0       0       0
   546 ;;      Temps:          2       0       0       0       0
   547 ;;      Totals:         3       0       0       0       0
   548 ;;Total ram usage:        3 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _segmentos
   560  0114                     _segmentos:	
   561                           
   562                           ;incstack = 0
   563                           ; Regs used in _segmentos: [wreg-fsr0h+status,2+status,0]
   564                           ;segmentos@numero stored from wreg
   565  0114  00F4               	movwf	segmentos@numero
   566  0115                     l807:	
   567  0115  2938               	goto	l911
   568  0116                     l809:	
   569  0116  303F               	movlw	63
   570  0117  2972               	goto	l100
   571  0118                     l815:	
   572  0118  3006               	movlw	6
   573  0119  2972               	goto	l100
   574  011A                     l821:	
   575  011A  305B               	movlw	91
   576  011B  2972               	goto	l100
   577  011C                     l827:	
   578  011C  304F               	movlw	79
   579  011D  2972               	goto	l100
   580  011E                     l833:	
   581  011E  3066               	movlw	102
   582  011F  2972               	goto	l100
   583  0120                     l839:	
   584  0120  306D               	movlw	109
   585  0121  2972               	goto	l100
   586  0122                     l845:	
   587  0122  307D               	movlw	125
   588  0123  2972               	goto	l100
   589  0124                     l851:	
   590  0124  3007               	movlw	7
   591  0125  2972               	goto	l100
   592  0126                     l857:	
   593  0126  307F               	movlw	127
   594  0127  2972               	goto	l100
   595  0128                     l863:	
   596  0128  306F               	movlw	111
   597  0129  2972               	goto	l100
   598  012A                     l869:	
   599  012A  3077               	movlw	119
   600  012B  2972               	goto	l100
   601  012C                     l875:	
   602  012C  307C               	movlw	124
   603  012D  2972               	goto	l100
   604  012E                     l881:	
   605  012E  3039               	movlw	57
   606  012F  2972               	goto	l100
   607  0130                     l887:	
   608  0130  305E               	movlw	94
   609  0131  2972               	goto	l100
   610  0132                     l893:	
   611  0132  3079               	movlw	121
   612  0133  2972               	goto	l100
   613  0134                     l899:	
   614  0134  30A1               	movlw	161
   615  0135  2972               	goto	l100
   616  0136                     l905:	
   617  0136  3000               	movlw	0
   618  0137  2972               	goto	l100
   619  0138                     l911:	
   620  0138  0874               	movf	segmentos@numero,w
   621  0139  00F2               	movwf	??_segmentos
   622  013A  01F3               	clrf	??_segmentos+1
   623                           
   624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   625                           ; Switch size 1, requested type "simple"
   626                           ; Number of cases is 1, Range of values is 0 to 0
   627                           ; switch strategies available:
   628                           ; Name         Instructions Cycles
   629                           ; simple_byte            4     3 (average)
   630                           ; direct_byte           11     8 (fixed)
   631                           ; jumptable            260     6 (fixed)
   632                           ;	Chosen strategy is simple_byte
   633  013B  0873               	movf	??_segmentos+1,w
   634  013C  3A00               	xorlw	0	; case 0
   635  013D  1903               	skipnz
   636  013E  2940               	goto	l973
   637  013F  2936               	goto	l905
   638  0140                     l973:	
   639                           
   640                           ; Switch size 1, requested type "simple"
   641                           ; Number of cases is 16, Range of values is 0 to 15
   642                           ; switch strategies available:
   643                           ; Name         Instructions Cycles
   644                           ; simple_byte           49    25 (average)
   645                           ; direct_byte           56     8 (fixed)
   646                           ; jumptable            260     6 (fixed)
   647                           ;	Chosen strategy is simple_byte
   648  0140  0872               	movf	??_segmentos,w
   649  0141  3A00               	xorlw	0	; case 0
   650  0142  1903               	skipnz
   651  0143  2916               	goto	l809
   652  0144  3A01               	xorlw	1	; case 1
   653  0145  1903               	skipnz
   654  0146  2918               	goto	l815
   655  0147  3A03               	xorlw	3	; case 2
   656  0148  1903               	skipnz
   657  0149  291A               	goto	l821
   658  014A  3A01               	xorlw	1	; case 3
   659  014B  1903               	skipnz
   660  014C  291C               	goto	l827
   661  014D  3A07               	xorlw	7	; case 4
   662  014E  1903               	skipnz
   663  014F  291E               	goto	l833
   664  0150  3A01               	xorlw	1	; case 5
   665  0151  1903               	skipnz
   666  0152  2920               	goto	l839
   667  0153  3A03               	xorlw	3	; case 6
   668  0154  1903               	skipnz
   669  0155  2922               	goto	l845
   670  0156  3A01               	xorlw	1	; case 7
   671  0157  1903               	skipnz
   672  0158  2924               	goto	l851
   673  0159  3A0F               	xorlw	15	; case 8
   674  015A  1903               	skipnz
   675  015B  2926               	goto	l857
   676  015C  3A01               	xorlw	1	; case 9
   677  015D  1903               	skipnz
   678  015E  2928               	goto	l863
   679  015F  3A03               	xorlw	3	; case 10
   680  0160  1903               	skipnz
   681  0161  292A               	goto	l869
   682  0162  3A01               	xorlw	1	; case 11
   683  0163  1903               	skipnz
   684  0164  292C               	goto	l875
   685  0165  3A07               	xorlw	7	; case 12
   686  0166  1903               	skipnz
   687  0167  292E               	goto	l881
   688  0168  3A01               	xorlw	1	; case 13
   689  0169  1903               	skipnz
   690  016A  2930               	goto	l887
   691  016B  3A03               	xorlw	3	; case 14
   692  016C  1903               	skipnz
   693  016D  2932               	goto	l893
   694  016E  3A01               	xorlw	1	; case 15
   695  016F  1903               	skipnz
   696  0170  2934               	goto	l899
   697  0171  2936               	goto	l905
   698  0172                     l100:	
   699  0172  0008               	return
   700  0173                     __end_of_segmentos:	
   701                           
   702                           	psect	text2
   703  0013                     __ptext2:	
   704 ;; *************** function _lecADC *****************
   705 ;; Defined at:
   706 ;;		line 12 in file "ADC.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  x               1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  x               1    4[COMMON] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      unsigned char 
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         1       0       0       0       0
   722 ;;      Temps:          2       0       0       0       0
   723 ;;      Totals:         3       0       0       0       0
   724 ;;Total ram usage:        3 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _lecADC
   736  0013                     _lecADC:	
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _lecADC: [wreg-fsr0h+status,2+status,0]
   740                           ;lecADC@x stored from wreg
   741  0013  00F4               	movwf	lecADC@x
   742  0014                     l751:	
   743                           
   744                           ;ADC.c: 13:     switch(x){
   745  0014  28CB               	goto	l787
   746  0015                     l76:	
   747                           ;ADC.c: 14:         case 0: TRISAbits.TRISA0=1; ANSELbits.ANS0=1; ADCON0bits.CHS=0; brea
      +                          k;
   748                           
   749  0015  1683               	bsf	3,5	;RP0=1, select bank1
   750  0016  1303               	bcf	3,6	;RP1=0, select bank1
   751  0017  1405               	bsf	5,0	;volatile
   752  0018  1683               	bsf	3,5	;RP0=1, select bank3
   753  0019  1703               	bsf	3,6	;RP1=1, select bank3
   754  001A  1408               	bsf	8,0	;volatile
   755  001B                     l753:	
   756  001B  30C3               	movlw	-61
   757  001C  1283               	bcf	3,5	;RP0=0, select bank0
   758  001D  1303               	bcf	3,6	;RP1=0, select bank0
   759  001E  059F               	andwf	31,f	;volatile
   760  001F  28FF               	goto	l77
   761  0020                     l78:	
   762                           ;ADC.c: 15:         case 1: TRISAbits.TRISA1=1; ANSELbits.ANS1=1; ADCON0bits.CHS=1; brea
      +                          k;
   763                           
   764  0020  1683               	bsf	3,5	;RP0=1, select bank1
   765  0021  1303               	bcf	3,6	;RP1=0, select bank1
   766  0022  1485               	bsf	5,1	;volatile
   767  0023  1683               	bsf	3,5	;RP0=1, select bank3
   768  0024  1703               	bsf	3,6	;RP1=1, select bank3
   769  0025  1488               	bsf	8,1	;volatile
   770  0026                     l755:	
   771  0026  1283               	bcf	3,5	;RP0=0, select bank0
   772  0027  1303               	bcf	3,6	;RP1=0, select bank0
   773  0028  081F               	movf	31,w	;volatile
   774  0029  39C3               	andlw	-61
   775  002A  3804               	iorlw	4
   776  002B  009F               	movwf	31	;volatile
   777  002C  28FF               	goto	l77
   778  002D                     l79:	
   779                           ;ADC.c: 16:         case 2: TRISAbits.TRISA2=1; ANSELbits.ANS2=1; ADCON0bits.CHS=2; brea
      +                          k;
   780                           
   781  002D  1683               	bsf	3,5	;RP0=1, select bank1
   782  002E  1303               	bcf	3,6	;RP1=0, select bank1
   783  002F  1505               	bsf	5,2	;volatile
   784  0030  1683               	bsf	3,5	;RP0=1, select bank3
   785  0031  1703               	bsf	3,6	;RP1=1, select bank3
   786  0032  1508               	bsf	8,2	;volatile
   787  0033                     l757:	
   788  0033  1283               	bcf	3,5	;RP0=0, select bank0
   789  0034  1303               	bcf	3,6	;RP1=0, select bank0
   790  0035  081F               	movf	31,w	;volatile
   791  0036  39C3               	andlw	-61
   792  0037  3808               	iorlw	8
   793  0038  009F               	movwf	31	;volatile
   794  0039  28FF               	goto	l77
   795  003A                     l80:	
   796                           ;ADC.c: 17:         case 3: TRISAbits.TRISA3=1; ANSELbits.ANS3=1; ADCON0bits.CHS=3; brea
      +                          k;
   797                           
   798  003A  1683               	bsf	3,5	;RP0=1, select bank1
   799  003B  1303               	bcf	3,6	;RP1=0, select bank1
   800  003C  1585               	bsf	5,3	;volatile
   801  003D  1683               	bsf	3,5	;RP0=1, select bank3
   802  003E  1703               	bsf	3,6	;RP1=1, select bank3
   803  003F  1588               	bsf	8,3	;volatile
   804  0040                     l759:	
   805  0040  1283               	bcf	3,5	;RP0=0, select bank0
   806  0041  1303               	bcf	3,6	;RP1=0, select bank0
   807  0042  081F               	movf	31,w	;volatile
   808  0043  39C3               	andlw	-61
   809  0044  380C               	iorlw	12
   810  0045  009F               	movwf	31	;volatile
   811  0046  28FF               	goto	l77
   812  0047                     l81:	
   813                           ;ADC.c: 18:         case 4: TRISAbits.TRISA5=1; ANSELbits.ANS4=1; ADCON0bits.CHS=4; brea
      +                          k;
   814                           
   815  0047  1683               	bsf	3,5	;RP0=1, select bank1
   816  0048  1303               	bcf	3,6	;RP1=0, select bank1
   817  0049  1685               	bsf	5,5	;volatile
   818  004A  1683               	bsf	3,5	;RP0=1, select bank3
   819  004B  1703               	bsf	3,6	;RP1=1, select bank3
   820  004C  1608               	bsf	8,4	;volatile
   821  004D                     l761:	
   822  004D  1283               	bcf	3,5	;RP0=0, select bank0
   823  004E  1303               	bcf	3,6	;RP1=0, select bank0
   824  004F  081F               	movf	31,w	;volatile
   825  0050  39C3               	andlw	-61
   826  0051  3810               	iorlw	16
   827  0052  009F               	movwf	31	;volatile
   828  0053  28FF               	goto	l77
   829  0054                     l82:	
   830                           ;ADC.c: 19:         case 5: TRISEbits.TRISE0=1; ANSELbits.ANS5=1; ADCON0bits.CHS=5; brea
      +                          k;
   831                           
   832  0054  1683               	bsf	3,5	;RP0=1, select bank1
   833  0055  1303               	bcf	3,6	;RP1=0, select bank1
   834  0056  1409               	bsf	9,0	;volatile
   835  0057  1683               	bsf	3,5	;RP0=1, select bank3
   836  0058  1703               	bsf	3,6	;RP1=1, select bank3
   837  0059  1688               	bsf	8,5	;volatile
   838  005A                     l763:	
   839  005A  1283               	bcf	3,5	;RP0=0, select bank0
   840  005B  1303               	bcf	3,6	;RP1=0, select bank0
   841  005C  081F               	movf	31,w	;volatile
   842  005D  39C3               	andlw	-61
   843  005E  3814               	iorlw	20
   844  005F  009F               	movwf	31	;volatile
   845  0060  28FF               	goto	l77
   846  0061                     l83:	
   847                           ;ADC.c: 20:         case 6: TRISEbits.TRISE2=1; ANSELbits.ANS6=1; ADCON0bits.CHS=6; brea
      +                          k;
   848                           
   849  0061  1683               	bsf	3,5	;RP0=1, select bank1
   850  0062  1303               	bcf	3,6	;RP1=0, select bank1
   851  0063  1509               	bsf	9,2	;volatile
   852  0064  1683               	bsf	3,5	;RP0=1, select bank3
   853  0065  1703               	bsf	3,6	;RP1=1, select bank3
   854  0066  1708               	bsf	8,6	;volatile
   855  0067                     l765:	
   856  0067  1283               	bcf	3,5	;RP0=0, select bank0
   857  0068  1303               	bcf	3,6	;RP1=0, select bank0
   858  0069  081F               	movf	31,w	;volatile
   859  006A  39C3               	andlw	-61
   860  006B  3818               	iorlw	24
   861  006C  009F               	movwf	31	;volatile
   862  006D  28FF               	goto	l77
   863  006E                     l84:	
   864                           ;ADC.c: 21:         case 7: TRISEbits.TRISE3=1; ANSELbits.ANS7=1; ADCON0bits.CHS=7; brea
      +                          k;
   865                           
   866  006E  1683               	bsf	3,5	;RP0=1, select bank1
   867  006F  1303               	bcf	3,6	;RP1=0, select bank1
   868  0070  1589               	bsf	9,3	;volatile
   869  0071  1683               	bsf	3,5	;RP0=1, select bank3
   870  0072  1703               	bsf	3,6	;RP1=1, select bank3
   871  0073  1788               	bsf	8,7	;volatile
   872  0074                     l767:	
   873  0074  1283               	bcf	3,5	;RP0=0, select bank0
   874  0075  1303               	bcf	3,6	;RP1=0, select bank0
   875  0076  081F               	movf	31,w	;volatile
   876  0077  39C3               	andlw	-61
   877  0078  381C               	iorlw	28
   878  0079  009F               	movwf	31	;volatile
   879  007A  28FF               	goto	l77
   880  007B                     l85:	
   881                           ;ADC.c: 22:         case 8: TRISBbits.TRISB2=1; ANSELHbits.ANS8=1; ADCON0bits.CHS=8; bre
      +                          ak;
   882                           
   883  007B  1683               	bsf	3,5	;RP0=1, select bank1
   884  007C  1303               	bcf	3,6	;RP1=0, select bank1
   885  007D  1506               	bsf	6,2	;volatile
   886  007E  1683               	bsf	3,5	;RP0=1, select bank3
   887  007F  1703               	bsf	3,6	;RP1=1, select bank3
   888  0080  1409               	bsf	9,0	;volatile
   889  0081                     l769:	
   890  0081  1283               	bcf	3,5	;RP0=0, select bank0
   891  0082  1303               	bcf	3,6	;RP1=0, select bank0
   892  0083  081F               	movf	31,w	;volatile
   893  0084  39C3               	andlw	-61
   894  0085  3820               	iorlw	32
   895  0086  009F               	movwf	31	;volatile
   896  0087  28FF               	goto	l77
   897  0088                     l86:	
   898                           ;ADC.c: 23:         case 9: TRISBbits.TRISB3=1; ANSELHbits.ANS9=1; ADCON0bits.CHS=9; bre
      +                          ak;
   899                           
   900  0088  1683               	bsf	3,5	;RP0=1, select bank1
   901  0089  1303               	bcf	3,6	;RP1=0, select bank1
   902  008A  1586               	bsf	6,3	;volatile
   903  008B  1683               	bsf	3,5	;RP0=1, select bank3
   904  008C  1703               	bsf	3,6	;RP1=1, select bank3
   905  008D  1489               	bsf	9,1	;volatile
   906  008E                     l771:	
   907  008E  1283               	bcf	3,5	;RP0=0, select bank0
   908  008F  1303               	bcf	3,6	;RP1=0, select bank0
   909  0090  081F               	movf	31,w	;volatile
   910  0091  39C3               	andlw	-61
   911  0092  3824               	iorlw	36
   912  0093  009F               	movwf	31	;volatile
   913  0094  28FF               	goto	l77
   914  0095                     l87:	
   915                           ;ADC.c: 24:         case 10: TRISBbits.TRISB1=1; ANSELHbits.ANS10=1; ADCON0bits.CHS=10; 
      +                          break;
   916                           
   917  0095  1683               	bsf	3,5	;RP0=1, select bank1
   918  0096  1303               	bcf	3,6	;RP1=0, select bank1
   919  0097  1486               	bsf	6,1	;volatile
   920  0098  1683               	bsf	3,5	;RP0=1, select bank3
   921  0099  1703               	bsf	3,6	;RP1=1, select bank3
   922  009A  1509               	bsf	9,2	;volatile
   923  009B                     l773:	
   924  009B  1283               	bcf	3,5	;RP0=0, select bank0
   925  009C  1303               	bcf	3,6	;RP1=0, select bank0
   926  009D  081F               	movf	31,w	;volatile
   927  009E  39C3               	andlw	-61
   928  009F  3828               	iorlw	40
   929  00A0  009F               	movwf	31	;volatile
   930  00A1  28FF               	goto	l77
   931  00A2                     l88:	
   932                           ;ADC.c: 25:         case 11: TRISBbits.TRISB4=1; ANSELHbits.ANS11=1; ADCON0bits.CHS=11; 
      +                          break;
   933                           
   934  00A2  1683               	bsf	3,5	;RP0=1, select bank1
   935  00A3  1303               	bcf	3,6	;RP1=0, select bank1
   936  00A4  1606               	bsf	6,4	;volatile
   937  00A5  1683               	bsf	3,5	;RP0=1, select bank3
   938  00A6  1703               	bsf	3,6	;RP1=1, select bank3
   939  00A7  1589               	bsf	9,3	;volatile
   940  00A8                     l775:	
   941  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   942  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   943  00AA  081F               	movf	31,w	;volatile
   944  00AB  39C3               	andlw	-61
   945  00AC  382C               	iorlw	44
   946  00AD  009F               	movwf	31	;volatile
   947  00AE  28FF               	goto	l77
   948  00AF                     l89:	
   949                           ;ADC.c: 26:         case 12: TRISBbits.TRISB0=1; ANSELHbits.ANS12=1; ADCON0bits.CHS=12; 
      +                          break;
   950                           
   951  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   952  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   953  00B1  1406               	bsf	6,0	;volatile
   954  00B2  1683               	bsf	3,5	;RP0=1, select bank3
   955  00B3  1703               	bsf	3,6	;RP1=1, select bank3
   956  00B4  1609               	bsf	9,4	;volatile
   957  00B5                     l777:	
   958  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   959  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   960  00B7  081F               	movf	31,w	;volatile
   961  00B8  39C3               	andlw	-61
   962  00B9  3830               	iorlw	48
   963  00BA  009F               	movwf	31	;volatile
   964  00BB  28FF               	goto	l77
   965  00BC                     l90:	
   966                           ;ADC.c: 27:         case 13: TRISBbits.TRISB5=1; ANSELHbits.ANS13=1; ADCON0bits.CHS=13; 
      +                          break;
   967                           
   968  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   969  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   970  00BE  1686               	bsf	6,5	;volatile
   971  00BF  1683               	bsf	3,5	;RP0=1, select bank3
   972  00C0  1703               	bsf	3,6	;RP1=1, select bank3
   973  00C1  1689               	bsf	9,5	;volatile
   974  00C2                     l779:	
   975  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   976  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   977  00C4  081F               	movf	31,w	;volatile
   978  00C5  39C3               	andlw	-61
   979  00C6  3834               	iorlw	52
   980  00C7  009F               	movwf	31	;volatile
   981  00C8  28FF               	goto	l77
   982  00C9                     l781:	
   983  00C9  3000               	movlw	0
   984  00CA  2913               	goto	l92
   985  00CB                     l787:	
   986  00CB  0874               	movf	lecADC@x,w
   987  00CC  00F2               	movwf	??_lecADC
   988  00CD  01F3               	clrf	??_lecADC+1
   989                           
   990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 1, Range of values is 0 to 0
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte            4     3 (average)
   996                           ; direct_byte           11     8 (fixed)
   997                           ; jumptable            260     6 (fixed)
   998                           ;	Chosen strategy is simple_byte
   999  00CE  0873               	movf	??_lecADC+1,w
  1000  00CF  3A00               	xorlw	0	; case 0
  1001  00D0  1903               	skipnz
  1002  00D1  28D3               	goto	l975
  1003  00D2  28C9               	goto	l781
  1004  00D3                     l975:	
  1005                           
  1006                           ; Switch size 1, requested type "simple"
  1007                           ; Number of cases is 14, Range of values is 0 to 13
  1008                           ; switch strategies available:
  1009                           ; Name         Instructions Cycles
  1010                           ; simple_byte           43    22 (average)
  1011                           ; direct_byte           50     8 (fixed)
  1012                           ; jumptable            260     6 (fixed)
  1013                           ;	Chosen strategy is simple_byte
  1014  00D3  0872               	movf	??_lecADC,w
  1015  00D4  3A00               	xorlw	0	; case 0
  1016  00D5  1903               	skipnz
  1017  00D6  2815               	goto	l76
  1018  00D7  3A01               	xorlw	1	; case 1
  1019  00D8  1903               	skipnz
  1020  00D9  2820               	goto	l78
  1021  00DA  3A03               	xorlw	3	; case 2
  1022  00DB  1903               	skipnz
  1023  00DC  282D               	goto	l79
  1024  00DD  3A01               	xorlw	1	; case 3
  1025  00DE  1903               	skipnz
  1026  00DF  283A               	goto	l80
  1027  00E0  3A07               	xorlw	7	; case 4
  1028  00E1  1903               	skipnz
  1029  00E2  2847               	goto	l81
  1030  00E3  3A01               	xorlw	1	; case 5
  1031  00E4  1903               	skipnz
  1032  00E5  2854               	goto	l82
  1033  00E6  3A03               	xorlw	3	; case 6
  1034  00E7  1903               	skipnz
  1035  00E8  2861               	goto	l83
  1036  00E9  3A01               	xorlw	1	; case 7
  1037  00EA  1903               	skipnz
  1038  00EB  286E               	goto	l84
  1039  00EC  3A0F               	xorlw	15	; case 8
  1040  00ED  1903               	skipnz
  1041  00EE  287B               	goto	l85
  1042  00EF  3A01               	xorlw	1	; case 9
  1043  00F0  1903               	skipnz
  1044  00F1  2888               	goto	l86
  1045  00F2  3A03               	xorlw	3	; case 10
  1046  00F3  1903               	skipnz
  1047  00F4  2895               	goto	l87
  1048  00F5  3A01               	xorlw	1	; case 11
  1049  00F6  1903               	skipnz
  1050  00F7  28A2               	goto	l88
  1051  00F8  3A07               	xorlw	7	; case 12
  1052  00F9  1903               	skipnz
  1053  00FA  28AF               	goto	l89
  1054  00FB  3A01               	xorlw	1	; case 13
  1055  00FC  1903               	skipnz
  1056  00FD  28BC               	goto	l90
  1057  00FE  28C9               	goto	l781
  1058  00FF                     l77:	
  1059                           
  1060                           ;ADC.c: 30:     ADCON0bits.ADON=1;
  1061  00FF  141F               	bsf	31,0	;volatile
  1062  0100                     l789:	
  1063                           
  1064                           ;ADC.c: 31:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1065  0100  3003               	movlw	3
  1066  0101  00F3               	movwf	??_lecADC+1
  1067  0102  3097               	movlw	151
  1068  0103  00F2               	movwf	??_lecADC
  1069  0104                     u37:	
  1070  0104  0BF2               	decfsz	??_lecADC,f
  1071  0105  2904               	goto	u37
  1072  0106  0BF3               	decfsz	??_lecADC+1,f
  1073  0107  2904               	goto	u37
  1074  0108  2909               	nop2
  1075  0109                     l791:	
  1076                           
  1077                           ;ADC.c: 32:     ADCON0bits.GO=1;
  1078  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1079  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1080  010B  149F               	bsf	31,1	;volatile
  1081  010C                     l793:	
  1082                           
  1083                           ;ADC.c: 34:     if(ADCON0bits.GO_DONE==1){goto resultado;}
  1084  010C  1C9F               	btfss	31,1	;volatile
  1085  010D  290F               	goto	u11
  1086  010E  2910               	goto	u10
  1087  010F                     u11:	
  1088  010F  2911               	goto	l94
  1089  0110                     u10:	
  1090  0110  290C               	goto	l793
  1091  0111                     l94:	
  1092                           ;ADC.c: 35:     else {ADCON0bits.ADON=0; return ADRESH;}
  1093                           
  1094  0111  101F               	bcf	31,0	;volatile
  1095  0112                     l799:	
  1096  0112  081E               	movf	30,w	;volatile
  1097  0113                     l92:	
  1098  0113  0008               	return
  1099  0114                     __end_of_lecADC:	
  1100                           
  1101                           	psect	text3
  1102  0197                     __ptext3:	
  1103 ;; *************** function _configIO *****************
  1104 ;; Defined at:
  1105 ;;		line 52 in file "Lab2.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0
  1122 ;;      Totals:         0       0       0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _configIO
  1135  0197                     _configIO:	
  1136  0197                     l709:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _configIO: [wreg+status,2]
  1139                           
  1140                           
  1141                           ;Lab2.c: 53:     TRISA=0;
  1142  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1143  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1144  0199  0185               	clrf	5	;volatile
  1145  019A                     l711:	
  1146                           
  1147                           ;Lab2.c: 54:     TRISB=0b00000111;
  1148  019A  3007               	movlw	7
  1149  019B  0086               	movwf	6	;volatile
  1150  019C                     l713:	
  1151                           
  1152                           ;Lab2.c: 55:     TRISC=0;
  1153  019C  0187               	clrf	7	;volatile
  1154  019D                     l715:	
  1155                           
  1156                           ;Lab2.c: 56:     TRISD=0;
  1157  019D  0188               	clrf	8	;volatile
  1158  019E                     l717:	
  1159                           
  1160                           ;Lab2.c: 57:     PORTA=0;
  1161  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1162  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1163  01A0  0185               	clrf	5	;volatile
  1164  01A1                     l719:	
  1165                           
  1166                           ;Lab2.c: 58:     PORTB=0;
  1167  01A1  0186               	clrf	6	;volatile
  1168  01A2                     l721:	
  1169                           
  1170                           ;Lab2.c: 59:     PORTC=0;
  1171  01A2  0187               	clrf	7	;volatile
  1172  01A3                     l723:	
  1173                           
  1174                           ;Lab2.c: 60:     PORTD=0;
  1175  01A3  0188               	clrf	8	;volatile
  1176  01A4                     l725:	
  1177                           
  1178                           ;Lab2.c: 61:     OSCCON= 0B01100111;
  1179  01A4  3067               	movlw	103
  1180  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1181  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1182  01A7  008F               	movwf	15	;volatile
  1183  01A8                     l727:	
  1184                           
  1185                           ;Lab2.c: 62:     INTCONbits.TMR0IE = 1;
  1186  01A8  168B               	bsf	11,5	;volatile
  1187  01A9                     l729:	
  1188                           
  1189                           ;Lab2.c: 63:     INTCONbits.TMR0IF=0;
  1190  01A9  110B               	bcf	11,2	;volatile
  1191  01AA                     l731:	
  1192                           
  1193                           ;Lab2.c: 64:     INTCONbits.GIE = 1;
  1194  01AA  178B               	bsf	11,7	;volatile
  1195  01AB                     l733:	
  1196                           
  1197                           ;Lab2.c: 65:     OPTION_REGbits.T0CS = 0;
  1198  01AB  1281               	bcf	1,5	;volatile
  1199  01AC                     l735:	
  1200                           
  1201                           ;Lab2.c: 66:     OPTION_REGbits.T0SE = 0;
  1202  01AC  1201               	bcf	1,4	;volatile
  1203  01AD                     l737:	
  1204                           
  1205                           ;Lab2.c: 67:     OPTION_REGbits.PSA = 0;
  1206  01AD  1181               	bcf	1,3	;volatile
  1207  01AE                     l739:	
  1208                           
  1209                           ;Lab2.c: 68:     OPTION_REGbits.PS2 = 1;
  1210  01AE  1501               	bsf	1,2	;volatile
  1211  01AF                     l741:	
  1212                           
  1213                           ;Lab2.c: 69:     OPTION_REGbits.PS1 = 1;
  1214  01AF  1481               	bsf	1,1	;volatile
  1215  01B0                     l743:	
  1216                           
  1217                           ;Lab2.c: 70:     OPTION_REGbits.PS0 = 1;
  1218  01B0  1401               	bsf	1,0	;volatile
  1219  01B1                     l745:	
  1220                           
  1221                           ;Lab2.c: 71:     TMR0 = 217;
  1222  01B1  30D9               	movlw	217
  1223  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1224  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1225  01B4  0081               	movwf	1	;volatile
  1226  01B5                     l51:	
  1227  01B5  0008               	return
  1228  01B6                     __end_of_configIO:	
  1229                           
  1230                           	psect	text4
  1231  01C9                     __ptext4:	
  1232 ;; *************** function _configADC *****************
  1233 ;; Defined at:
  1234 ;;		line 8 in file "ADC.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0
  1251 ;;      Totals:         0       0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _configADC
  1264  01C9                     _configADC:	
  1265  01C9                     l747:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _configADC: [wreg+status,2+status,0]
  1268                           
  1269                           
  1270                           ;ADC.c: 9:     ADCON0bits.ADCS=1;
  1271  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1272  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1273  01CB  081F               	movf	31,w	;volatile
  1274  01CC  393F               	andlw	-193
  1275  01CD  3840               	iorlw	64
  1276  01CE  009F               	movwf	31	;volatile
  1277  01CF                     l749:	
  1278                           
  1279                           ;ADC.c: 10:     ADCON1=0;
  1280  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1281  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  1282  01D1  019F               	clrf	31	;volatile
  1283  01D2                     l72:	
  1284  01D2  0008               	return
  1285  01D3                     __end_of_configADC:	
  1286                           
  1287                           	psect	text5
  1288  01B6                     __ptext5:	
  1289 ;; *************** function _ISR *****************
  1290 ;; Defined at:
  1291 ;;		line 32 in file "Lab2.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0
  1307 ;;      Temps:          2       0       0       0       0
  1308 ;;      Totals:         2       0       0       0       0
  1309 ;;Total ram usage:        2 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		Interrupt level 1
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _ISR
  1320  01B6                     _ISR:	
  1321  01B6                     i1l917:	
  1322                           
  1323                           ;Lab2.c: 33:     if(INTCONbits.TMR0IF==1){
  1324  01B6  1D0B               	btfss	11,2	;volatile
  1325  01B7  29B9               	goto	u2_21
  1326  01B8  29BA               	goto	u2_20
  1327  01B9                     u2_21:	
  1328  01B9  29C2               	goto	i1l38
  1329  01BA                     u2_20:	
  1330  01BA                     i1l919:	
  1331                           
  1332                           ;Lab2.c: 34:         INTCONbits.TMR0IF=0;
  1333  01BA  110B               	bcf	11,2	;volatile
  1334  01BB                     i1l921:	
  1335                           
  1336                           ;Lab2.c: 35:         TMR0 = 217;
  1337  01BB  30D9               	movlw	217
  1338  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1339  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1340  01BE  0081               	movwf	1	;volatile
  1341  01BF                     i1l923:	
  1342                           
  1343                           ;Lab2.c: 36:         PORTA=PORTA+1;}
  1344  01BF  0805               	movf	5,w	;volatile
  1345  01C0  3E01               	addlw	1
  1346  01C1  0085               	movwf	5	;volatile
  1347  01C2                     i1l38:	
  1348  01C2  0871               	movf	??_ISR+1,w
  1349  01C3  008A               	movwf	10
  1350  01C4  0E70               	swapf	??_ISR^(0+4294967168),w
  1351  01C5  0083               	movwf	3
  1352  01C6  0EFE               	swapf	btemp,f
  1353  01C7  0E7E               	swapf	btemp,w
  1354  01C8  0009               	retfie
  1355  01C9                     __end_of_ISR:	
  1356  007E                     btemp	set	126	;btemp
  1357  007E                     wtemp0	set	126
  1358                           
  1359                           	psect	intentry
  1360  0004                     __pintentry:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1363                           
  1364  0004                     interrupt_function:	
  1365  007E                     saved_w	set	btemp
  1366  0004  00FE               	movwf	btemp
  1367  0005  0E03               	swapf	3,w
  1368  0006  00F0               	movwf	??_ISR
  1369  0007  080A               	movf	10,w
  1370  0008  00F1               	movwf	??_ISR+1
  1371  0009  120A  118A  29B6   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lecADC
    _main->_segmentos

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              5 COMMON     1     1      0
                          _configADC
                           _configIO
                             _lecADC
                          _segmentos
 ---------------------------------------------------------------------------------
 (1) _segmentos                                            3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lecADC                                               3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configIO
   _lecADC
   _segmentos

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 05 21:26:09 2020

             __CFG_CP$OFF 0000                        l51 01B5                        l72 01D2  
                      l80 003A                        l81 0047                        l90 00BC  
                      l82 0054                        l83 0061                        l92 0113  
                      l84 006E                        l76 0015                        l85 007B  
                      l77 00FF                        l94 0111                        l86 0088  
                      l78 0020                        l87 0095                        l79 002D  
                      l88 00A2                        l89 00AF                        u10 0110  
                      u11 010F                        u37 0104                       l100 0172  
                     l711 019A                       l721 01A2                       l713 019C  
                     l731 01AA                       l723 01A3                       l715 019D  
                     l741 01AF                       l733 01AB                       l725 01A4  
                     l717 019E                       l709 0197                       l821 011A  
                     l743 01B0                       l735 01AC                       l727 01A8  
                     l719 01A1                       l751 0014                       l815 0118  
                     l911 0138                       l807 0115                       l745 01B1  
                     l737 01AD                       l729 01A9                       l761 004D  
                     l753 001B                       l905 0136                       l833 011E  
                     l809 0116                       l747 01C9                       l739 01AE  
                     l771 008E                       l763 005A                       l755 0026  
                     l851 0124                       l827 011C                       l931 018A  
                     l749 01CF                       l781 00C9                       l773 009B  
                     l765 0067                       l757 0033                       l845 0122  
                     l925 0173                       l791 0109                       l775 00A8  
                     l767 0074                       l759 0040                       l863 0128  
                     l839 0120                       l927 017D                       l793 010C  
                     l777 00B5                       l769 0081                       l881 012E  
                     l857 0126                       l929 0186                       l779 00C2  
                     l787 00CB                       l875 012C                       l789 0100  
                     l973 0140                       l893 0132                       l869 012A  
                     l799 0112                       l975 00D3                       l887 0130  
                     l899 0134              __CFG_CPD$OFF 0000                       _ISR 01B6  
            __CFG_LVP$OFF 0000                      ?_ISR 0070                      i1l38 01C2  
                    _TMR0 0001                      u2_20 01BA                      u2_21 01B9  
            __CFG_WRT$OFF 0000                      _main 0173                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l921 01BB  
                   i1l923 01BF                     i1l917 01B6                     i1l919 01BA  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0197           segmentos@numero 0074                    ??_main 0075  
                  _ADCON1 009F                    _ADRESH 001E                    _OSCCON 008F  
          __CFG_PWRTE$OFF 0000          __end_of_configIO 01B6                    _lecADC 0013  
                  saved_w 007E   __end_of__initialization 000F            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081        __size_of_configADC 000A                __pnvCOMMON 0076  
              __pmaintext 0173                   ?_lecADC 0070                __pintentry 0004  
      __size_of_segmentos 005F                 ?_configIO 0070         __end_of_configADC 01D3  
         __size_of_lecADC 0101                 _ANSELbits 0188                   __ptext1 0114  
                 __ptext2 0013                   __ptext3 0197                   __ptext4 01C9  
                 __ptext5 01B6              __size_of_ISR 0013                   lecADC@x 0074  
                 _vanalog 0076                ??_configIO 0072      end_of_initialization 000F  
       __end_of_segmentos 0173                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089            __end_of_lecADC 0114       start_initialization 000F  
             __end_of_ISR 01C9  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_lecADC 0072  
               ___latbits 0002         __size_of_configIO 001F                 _configADC 01C9  
       interrupt_function 0004                 _segmentos 0114                ?_configADC 0070  
              _ADCON0bits 001F                ?_segmentos 0070                _ANSELHbits 0189  
       __CFG_BOR4V$BOR40V 0000                  _configIO 0197             __size_of_main 0024  
             ??_configADC 0072                _INTCONbits 000B                  intlevel1 0000  
             ??_segmentos 0072  
