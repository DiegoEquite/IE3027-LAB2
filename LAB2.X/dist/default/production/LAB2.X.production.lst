

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 23:43:07 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360                           
   361                           	psect	nvCOMMON
   362  0074                     __pnvCOMMON:	
   363  0074                     _vanalog:	
   364  0074                     	ds	1
   365  001E                     _ADRESH	set	30
   366  001F                     _ADCON0bits	set	31
   367  0006                     _PORTB	set	6
   368  0008                     _PORTD	set	8
   369  0007                     _PORTC	set	7
   370  0086                     _TRISBbits	set	134
   371  0089                     _TRISEbits	set	137
   372  0085                     _TRISAbits	set	133
   373  009F                     _ADCON1	set	159
   374  0088                     _TRISD	set	136
   375  0087                     _TRISC	set	135
   376  0086                     _TRISB	set	134
   377  0189                     _ANSELHbits	set	393
   378  0188                     _ANSELbits	set	392
   379                           
   380                           ; #config settings
   381  0000                     
   382                           	psect	cinit
   383  07FC                     start_initialization:	
   384  07FC                     __initialization:	
   385  07FC                     end_of_initialization:	
   386                           ;End of C runtime variable initialization code
   387                           
   388  07FC                     __end_of__initialization:	
   389  07FC  0183               	clrf	3
   390  07FD  120A  118A  2E78   	ljmp	_main	;jump to C main() function
   391                           
   392                           	psect	cstackCOMMON
   393  0070                     __pcstackCOMMON:	
   394  0070                     ?_configIO:	
   395  0070                     ??_configIO:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_configADC:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ??_configADC:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_lecADC:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_lecADC:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_segmentos:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_segmentos:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421  0070                     	ds	2
   422  0072                     lecADC@x:	
   423  0072                     segmentos@numero:	
   424                           ; 1 bytes @ 0x2
   425                           
   426                           
   427                           ; 1 bytes @ 0x2
   428  0072                     	ds	1
   429  0073                     ??_main:	
   430                           
   431                           ; 1 bytes @ 0x3
   432  0073                     	ds	1
   433                           
   434                           	psect	maintext
   435  0678                     __pmaintext:	
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   438 ;;
   439 ;; *************** function _main *****************
   440 ;; Defined at:
   441 ;;		line 34 in file "Lab2.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : B00/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   455 ;;      Params:         0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0
   457 ;;      Temps:          1       0       0       0       0
   458 ;;      Totals:         1       0       0       0       0
   459 ;;Total ram usage:        1 bytes
   460 ;; Hardware stack levels required when called:    1
   461 ;; This function calls:
   462 ;;		_configADC
   463 ;;		_configIO
   464 ;;		_lecADC
   465 ;;		_segmentos
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  0678                     _main:	
   474  0678                     l873:	
   475                           ;incstack = 0
   476                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   477                           
   478                           
   479                           ;Lab2.c: 35:     configIO();
   480  0678  120A  118A  266C  120A  118A  	fcall	_configIO
   481                           
   482                           ;Lab2.c: 36:     configADC();
   483  067D  120A  118A  2662  120A  118A  	fcall	_configADC
   484  0682                     l875:	
   485                           
   486                           ;Lab2.c: 38:         vanalog=lecADC(8);
   487  0682  3008               	movlw	8
   488  0683  120A  118A  26FB  120A  118A  	fcall	_lecADC
   489  0688  00F3               	movwf	??_main
   490  0689  0873               	movf	??_main,w
   491  068A  00F4               	movwf	_vanalog
   492  068B                     l877:	
   493                           
   494                           ;Lab2.c: 39:         PORTC=vanalog;
   495  068B  0874               	movf	_vanalog,w
   496  068C  1283               	bcf	3,5	;RP0=0, select bank0
   497  068D  1303               	bcf	3,6	;RP1=0, select bank0
   498  068E  0087               	movwf	7	;volatile
   499  068F                     l879:	
   500                           
   501                           ;Lab2.c: 40:         PORTD=segmentos(0);
   502  068F  3000               	movlw	0
   503  0690  120A  118A  269C  120A  118A  	fcall	_segmentos
   504  0695  1283               	bcf	3,5	;RP0=0, select bank0
   505  0696  1303               	bcf	3,6	;RP1=0, select bank0
   506  0697  0088               	movwf	8	;volatile
   507  0698  2E82               	goto	l875
   508  0699  120A  118A  2800   	ljmp	start
   509  069C                     __end_of_main:	
   510                           
   511                           	psect	text1
   512  069C                     __ptext1:	
   513 ;; *************** function _segmentos *****************
   514 ;; Defined at:
   515 ;;		line 5 in file "7segmentos.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  numero          1    wreg     unsigned char 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  numero          1    2[COMMON] unsigned char 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      unsigned char 
   522 ;; Registers used:
   523 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         0       0       0       0       0
   530 ;;      Locals:         1       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0
   532 ;;      Totals:         3       0       0       0       0
   533 ;;Total ram usage:        3 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           
   543                           ;psect for function _segmentos
   544  069C                     _segmentos:	
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _segmentos: [wreg-fsr0h+status,2+status,0]
   548                           ;segmentos@numero stored from wreg
   549  069C  00F2               	movwf	segmentos@numero
   550  069D                     l763:	
   551  069D  2EC0               	goto	l867
   552  069E                     l765:	
   553  069E  303F               	movlw	63
   554  069F  2EFA               	goto	l82
   555  06A0                     l771:	
   556  06A0  3006               	movlw	6
   557  06A1  2EFA               	goto	l82
   558  06A2                     l777:	
   559  06A2  305B               	movlw	91
   560  06A3  2EFA               	goto	l82
   561  06A4                     l783:	
   562  06A4  304F               	movlw	79
   563  06A5  2EFA               	goto	l82
   564  06A6                     l789:	
   565  06A6  3066               	movlw	102
   566  06A7  2EFA               	goto	l82
   567  06A8                     l795:	
   568  06A8  306D               	movlw	109
   569  06A9  2EFA               	goto	l82
   570  06AA                     l801:	
   571  06AA  307D               	movlw	125
   572  06AB  2EFA               	goto	l82
   573  06AC                     l807:	
   574  06AC  3007               	movlw	7
   575  06AD  2EFA               	goto	l82
   576  06AE                     l813:	
   577  06AE  307F               	movlw	127
   578  06AF  2EFA               	goto	l82
   579  06B0                     l819:	
   580  06B0  306F               	movlw	111
   581  06B1  2EFA               	goto	l82
   582  06B2                     l825:	
   583  06B2  3077               	movlw	119
   584  06B3  2EFA               	goto	l82
   585  06B4                     l831:	
   586  06B4  307C               	movlw	124
   587  06B5  2EFA               	goto	l82
   588  06B6                     l837:	
   589  06B6  3039               	movlw	57
   590  06B7  2EFA               	goto	l82
   591  06B8                     l843:	
   592  06B8  305E               	movlw	94
   593  06B9  2EFA               	goto	l82
   594  06BA                     l849:	
   595  06BA  3079               	movlw	121
   596  06BB  2EFA               	goto	l82
   597  06BC                     l855:	
   598  06BC  30A1               	movlw	161
   599  06BD  2EFA               	goto	l82
   600  06BE                     l861:	
   601  06BE  3000               	movlw	0
   602  06BF  2EFA               	goto	l82
   603  06C0                     l867:	
   604  06C0  0872               	movf	segmentos@numero,w
   605  06C1  00F0               	movwf	??_segmentos
   606  06C2  01F1               	clrf	??_segmentos+1
   607                           
   608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   609                           ; Switch size 1, requested type "simple"
   610                           ; Number of cases is 1, Range of values is 0 to 0
   611                           ; switch strategies available:
   612                           ; Name         Instructions Cycles
   613                           ; simple_byte            4     3 (average)
   614                           ; direct_byte           11     8 (fixed)
   615                           ; jumptable            260     6 (fixed)
   616                           ;	Chosen strategy is simple_byte
   617  06C3  0871               	movf	??_segmentos+1,w
   618  06C4  3A00               	xorlw	0	; case 0
   619  06C5  1903               	skipnz
   620  06C6  2EC8               	goto	l921
   621  06C7  2EBE               	goto	l861
   622  06C8                     l921:	
   623                           
   624                           ; Switch size 1, requested type "simple"
   625                           ; Number of cases is 16, Range of values is 0 to 15
   626                           ; switch strategies available:
   627                           ; Name         Instructions Cycles
   628                           ; simple_byte           49    25 (average)
   629                           ; direct_byte           56     8 (fixed)
   630                           ; jumptable            260     6 (fixed)
   631                           ;	Chosen strategy is simple_byte
   632  06C8  0870               	movf	??_segmentos,w
   633  06C9  3A00               	xorlw	0	; case 0
   634  06CA  1903               	skipnz
   635  06CB  2E9E               	goto	l765
   636  06CC  3A01               	xorlw	1	; case 1
   637  06CD  1903               	skipnz
   638  06CE  2EA0               	goto	l771
   639  06CF  3A03               	xorlw	3	; case 2
   640  06D0  1903               	skipnz
   641  06D1  2EA2               	goto	l777
   642  06D2  3A01               	xorlw	1	; case 3
   643  06D3  1903               	skipnz
   644  06D4  2EA4               	goto	l783
   645  06D5  3A07               	xorlw	7	; case 4
   646  06D6  1903               	skipnz
   647  06D7  2EA6               	goto	l789
   648  06D8  3A01               	xorlw	1	; case 5
   649  06D9  1903               	skipnz
   650  06DA  2EA8               	goto	l795
   651  06DB  3A03               	xorlw	3	; case 6
   652  06DC  1903               	skipnz
   653  06DD  2EAA               	goto	l801
   654  06DE  3A01               	xorlw	1	; case 7
   655  06DF  1903               	skipnz
   656  06E0  2EAC               	goto	l807
   657  06E1  3A0F               	xorlw	15	; case 8
   658  06E2  1903               	skipnz
   659  06E3  2EAE               	goto	l813
   660  06E4  3A01               	xorlw	1	; case 9
   661  06E5  1903               	skipnz
   662  06E6  2EB0               	goto	l819
   663  06E7  3A03               	xorlw	3	; case 10
   664  06E8  1903               	skipnz
   665  06E9  2EB2               	goto	l825
   666  06EA  3A01               	xorlw	1	; case 11
   667  06EB  1903               	skipnz
   668  06EC  2EB4               	goto	l831
   669  06ED  3A07               	xorlw	7	; case 12
   670  06EE  1903               	skipnz
   671  06EF  2EB6               	goto	l837
   672  06F0  3A01               	xorlw	1	; case 13
   673  06F1  1903               	skipnz
   674  06F2  2EB8               	goto	l843
   675  06F3  3A03               	xorlw	3	; case 14
   676  06F4  1903               	skipnz
   677  06F5  2EBA               	goto	l849
   678  06F6  3A01               	xorlw	1	; case 15
   679  06F7  1903               	skipnz
   680  06F8  2EBC               	goto	l855
   681  06F9  2EBE               	goto	l861
   682  06FA                     l82:	
   683  06FA  0008               	return
   684  06FB                     __end_of_segmentos:	
   685                           
   686                           	psect	text2
   687  06FB                     __ptext2:	
   688 ;; *************** function _lecADC *****************
   689 ;; Defined at:
   690 ;;		line 12 in file "ADC.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  x               1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  x               1    2[COMMON] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      unsigned char 
   697 ;; Registers used:
   698 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          2       0       0       0       0
   707 ;;      Totals:         3       0       0       0       0
   708 ;;Total ram usage:        3 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _lecADC
   719  06FB                     _lecADC:	
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _lecADC: [wreg-fsr0h+status,2+status,0]
   723                           ;lecADC@x stored from wreg
   724  06FB  00F2               	movwf	lecADC@x
   725  06FC                     l707:	
   726                           
   727                           ;ADC.c: 13:     switch(x){
   728  06FC  2FB3               	goto	l743
   729  06FD                     l58:	
   730                           ;ADC.c: 14:         case 0: TRISAbits.TRISA0=1; ANSELbits.ANS0=1; ADCON0bits.CHS=0; brea
      +                          k;
   731                           
   732  06FD  1683               	bsf	3,5	;RP0=1, select bank1
   733  06FE  1303               	bcf	3,6	;RP1=0, select bank1
   734  06FF  1405               	bsf	5,0	;volatile
   735  0700  1683               	bsf	3,5	;RP0=1, select bank3
   736  0701  1703               	bsf	3,6	;RP1=1, select bank3
   737  0702  1408               	bsf	8,0	;volatile
   738  0703                     l709:	
   739  0703  30C3               	movlw	-61
   740  0704  1283               	bcf	3,5	;RP0=0, select bank0
   741  0705  1303               	bcf	3,6	;RP1=0, select bank0
   742  0706  059F               	andwf	31,f	;volatile
   743  0707  2FE7               	goto	l59
   744  0708                     l60:	
   745                           ;ADC.c: 15:         case 1: TRISAbits.TRISA1=1; ANSELbits.ANS1=1; ADCON0bits.CHS=1; brea
      +                          k;
   746                           
   747  0708  1683               	bsf	3,5	;RP0=1, select bank1
   748  0709  1303               	bcf	3,6	;RP1=0, select bank1
   749  070A  1485               	bsf	5,1	;volatile
   750  070B  1683               	bsf	3,5	;RP0=1, select bank3
   751  070C  1703               	bsf	3,6	;RP1=1, select bank3
   752  070D  1488               	bsf	8,1	;volatile
   753  070E                     l711:	
   754  070E  1283               	bcf	3,5	;RP0=0, select bank0
   755  070F  1303               	bcf	3,6	;RP1=0, select bank0
   756  0710  081F               	movf	31,w	;volatile
   757  0711  39C3               	andlw	-61
   758  0712  3804               	iorlw	4
   759  0713  009F               	movwf	31	;volatile
   760  0714  2FE7               	goto	l59
   761  0715                     l61:	
   762                           ;ADC.c: 16:         case 2: TRISAbits.TRISA2=1; ANSELbits.ANS2=1; ADCON0bits.CHS=2; brea
      +                          k;
   763                           
   764  0715  1683               	bsf	3,5	;RP0=1, select bank1
   765  0716  1303               	bcf	3,6	;RP1=0, select bank1
   766  0717  1505               	bsf	5,2	;volatile
   767  0718  1683               	bsf	3,5	;RP0=1, select bank3
   768  0719  1703               	bsf	3,6	;RP1=1, select bank3
   769  071A  1508               	bsf	8,2	;volatile
   770  071B                     l713:	
   771  071B  1283               	bcf	3,5	;RP0=0, select bank0
   772  071C  1303               	bcf	3,6	;RP1=0, select bank0
   773  071D  081F               	movf	31,w	;volatile
   774  071E  39C3               	andlw	-61
   775  071F  3808               	iorlw	8
   776  0720  009F               	movwf	31	;volatile
   777  0721  2FE7               	goto	l59
   778  0722                     l62:	
   779                           ;ADC.c: 17:         case 3: TRISAbits.TRISA3=1; ANSELbits.ANS3=1; ADCON0bits.CHS=3; brea
      +                          k;
   780                           
   781  0722  1683               	bsf	3,5	;RP0=1, select bank1
   782  0723  1303               	bcf	3,6	;RP1=0, select bank1
   783  0724  1585               	bsf	5,3	;volatile
   784  0725  1683               	bsf	3,5	;RP0=1, select bank3
   785  0726  1703               	bsf	3,6	;RP1=1, select bank3
   786  0727  1588               	bsf	8,3	;volatile
   787  0728                     l715:	
   788  0728  1283               	bcf	3,5	;RP0=0, select bank0
   789  0729  1303               	bcf	3,6	;RP1=0, select bank0
   790  072A  081F               	movf	31,w	;volatile
   791  072B  39C3               	andlw	-61
   792  072C  380C               	iorlw	12
   793  072D  009F               	movwf	31	;volatile
   794  072E  2FE7               	goto	l59
   795  072F                     l63:	
   796                           ;ADC.c: 18:         case 4: TRISAbits.TRISA5=1; ANSELbits.ANS4=1; ADCON0bits.CHS=4; brea
      +                          k;
   797                           
   798  072F  1683               	bsf	3,5	;RP0=1, select bank1
   799  0730  1303               	bcf	3,6	;RP1=0, select bank1
   800  0731  1685               	bsf	5,5	;volatile
   801  0732  1683               	bsf	3,5	;RP0=1, select bank3
   802  0733  1703               	bsf	3,6	;RP1=1, select bank3
   803  0734  1608               	bsf	8,4	;volatile
   804  0735                     l717:	
   805  0735  1283               	bcf	3,5	;RP0=0, select bank0
   806  0736  1303               	bcf	3,6	;RP1=0, select bank0
   807  0737  081F               	movf	31,w	;volatile
   808  0738  39C3               	andlw	-61
   809  0739  3810               	iorlw	16
   810  073A  009F               	movwf	31	;volatile
   811  073B  2FE7               	goto	l59
   812  073C                     l64:	
   813                           ;ADC.c: 19:         case 5: TRISEbits.TRISE0=1; ANSELbits.ANS5=1; ADCON0bits.CHS=5; brea
      +                          k;
   814                           
   815  073C  1683               	bsf	3,5	;RP0=1, select bank1
   816  073D  1303               	bcf	3,6	;RP1=0, select bank1
   817  073E  1409               	bsf	9,0	;volatile
   818  073F  1683               	bsf	3,5	;RP0=1, select bank3
   819  0740  1703               	bsf	3,6	;RP1=1, select bank3
   820  0741  1688               	bsf	8,5	;volatile
   821  0742                     l719:	
   822  0742  1283               	bcf	3,5	;RP0=0, select bank0
   823  0743  1303               	bcf	3,6	;RP1=0, select bank0
   824  0744  081F               	movf	31,w	;volatile
   825  0745  39C3               	andlw	-61
   826  0746  3814               	iorlw	20
   827  0747  009F               	movwf	31	;volatile
   828  0748  2FE7               	goto	l59
   829  0749                     l65:	
   830                           ;ADC.c: 20:         case 6: TRISEbits.TRISE2=1; ANSELbits.ANS6=1; ADCON0bits.CHS=6; brea
      +                          k;
   831                           
   832  0749  1683               	bsf	3,5	;RP0=1, select bank1
   833  074A  1303               	bcf	3,6	;RP1=0, select bank1
   834  074B  1509               	bsf	9,2	;volatile
   835  074C  1683               	bsf	3,5	;RP0=1, select bank3
   836  074D  1703               	bsf	3,6	;RP1=1, select bank3
   837  074E  1708               	bsf	8,6	;volatile
   838  074F                     l721:	
   839  074F  1283               	bcf	3,5	;RP0=0, select bank0
   840  0750  1303               	bcf	3,6	;RP1=0, select bank0
   841  0751  081F               	movf	31,w	;volatile
   842  0752  39C3               	andlw	-61
   843  0753  3818               	iorlw	24
   844  0754  009F               	movwf	31	;volatile
   845  0755  2FE7               	goto	l59
   846  0756                     l66:	
   847                           ;ADC.c: 21:         case 7: TRISEbits.TRISE3=1; ANSELbits.ANS7=1; ADCON0bits.CHS=7; brea
      +                          k;
   848                           
   849  0756  1683               	bsf	3,5	;RP0=1, select bank1
   850  0757  1303               	bcf	3,6	;RP1=0, select bank1
   851  0758  1589               	bsf	9,3	;volatile
   852  0759  1683               	bsf	3,5	;RP0=1, select bank3
   853  075A  1703               	bsf	3,6	;RP1=1, select bank3
   854  075B  1788               	bsf	8,7	;volatile
   855  075C                     l723:	
   856  075C  1283               	bcf	3,5	;RP0=0, select bank0
   857  075D  1303               	bcf	3,6	;RP1=0, select bank0
   858  075E  081F               	movf	31,w	;volatile
   859  075F  39C3               	andlw	-61
   860  0760  381C               	iorlw	28
   861  0761  009F               	movwf	31	;volatile
   862  0762  2FE7               	goto	l59
   863  0763                     l67:	
   864                           ;ADC.c: 22:         case 8: TRISBbits.TRISB2=1; ANSELHbits.ANS8=1; ADCON0bits.CHS=8; bre
      +                          ak;
   865                           
   866  0763  1683               	bsf	3,5	;RP0=1, select bank1
   867  0764  1303               	bcf	3,6	;RP1=0, select bank1
   868  0765  1506               	bsf	6,2	;volatile
   869  0766  1683               	bsf	3,5	;RP0=1, select bank3
   870  0767  1703               	bsf	3,6	;RP1=1, select bank3
   871  0768  1409               	bsf	9,0	;volatile
   872  0769                     l725:	
   873  0769  1283               	bcf	3,5	;RP0=0, select bank0
   874  076A  1303               	bcf	3,6	;RP1=0, select bank0
   875  076B  081F               	movf	31,w	;volatile
   876  076C  39C3               	andlw	-61
   877  076D  3820               	iorlw	32
   878  076E  009F               	movwf	31	;volatile
   879  076F  2FE7               	goto	l59
   880  0770                     l68:	
   881                           ;ADC.c: 23:         case 9: TRISBbits.TRISB3=1; ANSELHbits.ANS9=1; ADCON0bits.CHS=9; bre
      +                          ak;
   882                           
   883  0770  1683               	bsf	3,5	;RP0=1, select bank1
   884  0771  1303               	bcf	3,6	;RP1=0, select bank1
   885  0772  1586               	bsf	6,3	;volatile
   886  0773  1683               	bsf	3,5	;RP0=1, select bank3
   887  0774  1703               	bsf	3,6	;RP1=1, select bank3
   888  0775  1489               	bsf	9,1	;volatile
   889  0776                     l727:	
   890  0776  1283               	bcf	3,5	;RP0=0, select bank0
   891  0777  1303               	bcf	3,6	;RP1=0, select bank0
   892  0778  081F               	movf	31,w	;volatile
   893  0779  39C3               	andlw	-61
   894  077A  3824               	iorlw	36
   895  077B  009F               	movwf	31	;volatile
   896  077C  2FE7               	goto	l59
   897  077D                     l69:	
   898                           ;ADC.c: 24:         case 10: TRISBbits.TRISB1=1; ANSELHbits.ANS10=1; ADCON0bits.CHS=10; 
      +                          break;
   899                           
   900  077D  1683               	bsf	3,5	;RP0=1, select bank1
   901  077E  1303               	bcf	3,6	;RP1=0, select bank1
   902  077F  1486               	bsf	6,1	;volatile
   903  0780  1683               	bsf	3,5	;RP0=1, select bank3
   904  0781  1703               	bsf	3,6	;RP1=1, select bank3
   905  0782  1509               	bsf	9,2	;volatile
   906  0783                     l729:	
   907  0783  1283               	bcf	3,5	;RP0=0, select bank0
   908  0784  1303               	bcf	3,6	;RP1=0, select bank0
   909  0785  081F               	movf	31,w	;volatile
   910  0786  39C3               	andlw	-61
   911  0787  3828               	iorlw	40
   912  0788  009F               	movwf	31	;volatile
   913  0789  2FE7               	goto	l59
   914  078A                     l70:	
   915                           ;ADC.c: 25:         case 11: TRISBbits.TRISB4=1; ANSELHbits.ANS11=1; ADCON0bits.CHS=11; 
      +                          break;
   916                           
   917  078A  1683               	bsf	3,5	;RP0=1, select bank1
   918  078B  1303               	bcf	3,6	;RP1=0, select bank1
   919  078C  1606               	bsf	6,4	;volatile
   920  078D  1683               	bsf	3,5	;RP0=1, select bank3
   921  078E  1703               	bsf	3,6	;RP1=1, select bank3
   922  078F  1589               	bsf	9,3	;volatile
   923  0790                     l731:	
   924  0790  1283               	bcf	3,5	;RP0=0, select bank0
   925  0791  1303               	bcf	3,6	;RP1=0, select bank0
   926  0792  081F               	movf	31,w	;volatile
   927  0793  39C3               	andlw	-61
   928  0794  382C               	iorlw	44
   929  0795  009F               	movwf	31	;volatile
   930  0796  2FE7               	goto	l59
   931  0797                     l71:	
   932                           ;ADC.c: 26:         case 12: TRISBbits.TRISB0=1; ANSELHbits.ANS12=1; ADCON0bits.CHS=12; 
      +                          break;
   933                           
   934  0797  1683               	bsf	3,5	;RP0=1, select bank1
   935  0798  1303               	bcf	3,6	;RP1=0, select bank1
   936  0799  1406               	bsf	6,0	;volatile
   937  079A  1683               	bsf	3,5	;RP0=1, select bank3
   938  079B  1703               	bsf	3,6	;RP1=1, select bank3
   939  079C  1609               	bsf	9,4	;volatile
   940  079D                     l733:	
   941  079D  1283               	bcf	3,5	;RP0=0, select bank0
   942  079E  1303               	bcf	3,6	;RP1=0, select bank0
   943  079F  081F               	movf	31,w	;volatile
   944  07A0  39C3               	andlw	-61
   945  07A1  3830               	iorlw	48
   946  07A2  009F               	movwf	31	;volatile
   947  07A3  2FE7               	goto	l59
   948  07A4                     l72:	
   949                           ;ADC.c: 27:         case 13: TRISBbits.TRISB5=1; ANSELHbits.ANS13=1; ADCON0bits.CHS=13; 
      +                          break;
   950                           
   951  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   952  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   953  07A6  1686               	bsf	6,5	;volatile
   954  07A7  1683               	bsf	3,5	;RP0=1, select bank3
   955  07A8  1703               	bsf	3,6	;RP1=1, select bank3
   956  07A9  1689               	bsf	9,5	;volatile
   957  07AA                     l735:	
   958  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   959  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   960  07AC  081F               	movf	31,w	;volatile
   961  07AD  39C3               	andlw	-61
   962  07AE  3834               	iorlw	52
   963  07AF  009F               	movwf	31	;volatile
   964  07B0  2FE7               	goto	l59
   965  07B1                     l737:	
   966  07B1  3000               	movlw	0
   967  07B2  2FFB               	goto	l74
   968  07B3                     l743:	
   969  07B3  0872               	movf	lecADC@x,w
   970  07B4  00F0               	movwf	??_lecADC
   971  07B5  01F1               	clrf	??_lecADC+1
   972                           
   973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 0 to 0
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ; direct_byte           11     8 (fixed)
   980                           ; jumptable            260     6 (fixed)
   981                           ;	Chosen strategy is simple_byte
   982  07B6  0871               	movf	??_lecADC+1,w
   983  07B7  3A00               	xorlw	0	; case 0
   984  07B8  1903               	skipnz
   985  07B9  2FBB               	goto	l923
   986  07BA  2FB1               	goto	l737
   987  07BB                     l923:	
   988                           
   989                           ; Switch size 1, requested type "simple"
   990                           ; Number of cases is 14, Range of values is 0 to 13
   991                           ; switch strategies available:
   992                           ; Name         Instructions Cycles
   993                           ; simple_byte           43    22 (average)
   994                           ; direct_byte           50     8 (fixed)
   995                           ; jumptable            260     6 (fixed)
   996                           ;	Chosen strategy is simple_byte
   997  07BB  0870               	movf	??_lecADC,w
   998  07BC  3A00               	xorlw	0	; case 0
   999  07BD  1903               	skipnz
  1000  07BE  2EFD               	goto	l58
  1001  07BF  3A01               	xorlw	1	; case 1
  1002  07C0  1903               	skipnz
  1003  07C1  2F08               	goto	l60
  1004  07C2  3A03               	xorlw	3	; case 2
  1005  07C3  1903               	skipnz
  1006  07C4  2F15               	goto	l61
  1007  07C5  3A01               	xorlw	1	; case 3
  1008  07C6  1903               	skipnz
  1009  07C7  2F22               	goto	l62
  1010  07C8  3A07               	xorlw	7	; case 4
  1011  07C9  1903               	skipnz
  1012  07CA  2F2F               	goto	l63
  1013  07CB  3A01               	xorlw	1	; case 5
  1014  07CC  1903               	skipnz
  1015  07CD  2F3C               	goto	l64
  1016  07CE  3A03               	xorlw	3	; case 6
  1017  07CF  1903               	skipnz
  1018  07D0  2F49               	goto	l65
  1019  07D1  3A01               	xorlw	1	; case 7
  1020  07D2  1903               	skipnz
  1021  07D3  2F56               	goto	l66
  1022  07D4  3A0F               	xorlw	15	; case 8
  1023  07D5  1903               	skipnz
  1024  07D6  2F63               	goto	l67
  1025  07D7  3A01               	xorlw	1	; case 9
  1026  07D8  1903               	skipnz
  1027  07D9  2F70               	goto	l68
  1028  07DA  3A03               	xorlw	3	; case 10
  1029  07DB  1903               	skipnz
  1030  07DC  2F7D               	goto	l69
  1031  07DD  3A01               	xorlw	1	; case 11
  1032  07DE  1903               	skipnz
  1033  07DF  2F8A               	goto	l70
  1034  07E0  3A07               	xorlw	7	; case 12
  1035  07E1  1903               	skipnz
  1036  07E2  2F97               	goto	l71
  1037  07E3  3A01               	xorlw	1	; case 13
  1038  07E4  1903               	skipnz
  1039  07E5  2FA4               	goto	l72
  1040  07E6  2FB1               	goto	l737
  1041  07E7                     l59:	
  1042                           
  1043                           ;ADC.c: 30:     ADCON0bits.ADON=1;
  1044  07E7  141F               	bsf	31,0	;volatile
  1045  07E8                     l745:	
  1046                           
  1047                           ;ADC.c: 31:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1048  07E8  3003               	movlw	3
  1049  07E9  00F1               	movwf	??_lecADC+1
  1050  07EA  3097               	movlw	151
  1051  07EB  00F0               	movwf	??_lecADC
  1052  07EC                     u27:	
  1053  07EC  0BF0               	decfsz	??_lecADC,f
  1054  07ED  2FEC               	goto	u27
  1055  07EE  0BF1               	decfsz	??_lecADC+1,f
  1056  07EF  2FEC               	goto	u27
  1057  07F0  2FF1               	nop2
  1058  07F1                     l747:	
  1059                           
  1060                           ;ADC.c: 32:     ADCON0bits.GO=1;
  1061  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1062  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1063  07F3  149F               	bsf	31,1	;volatile
  1064  07F4                     l749:	
  1065                           
  1066                           ;ADC.c: 34:     if(ADCON0bits.GO_DONE==1){goto resultado;}
  1067  07F4  1C9F               	btfss	31,1	;volatile
  1068  07F5  2FF7               	goto	u11
  1069  07F6  2FF8               	goto	u10
  1070  07F7                     u11:	
  1071  07F7  2FF9               	goto	l76
  1072  07F8                     u10:	
  1073  07F8  2FF4               	goto	l749
  1074  07F9                     l76:	
  1075                           ;ADC.c: 35:     else {ADCON0bits.ADON=0; return ADRESH;}
  1076                           
  1077  07F9  101F               	bcf	31,0	;volatile
  1078  07FA                     l755:	
  1079  07FA  081E               	movf	30,w	;volatile
  1080  07FB                     l74:	
  1081  07FB  0008               	return
  1082  07FC                     __end_of_lecADC:	
  1083                           
  1084                           	psect	text3
  1085  066C                     __ptext3:	
  1086 ;; *************** function _configIO *****************
  1087 ;; Defined at:
  1088 ;;		line 43 in file "Lab2.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function _configIO
  1117  066C                     _configIO:	
  1118  066C                     l691:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _configIO: [wreg+status,2]
  1121                           
  1122                           
  1123                           ;Lab2.c: 44:     TRISB=0b00000111;
  1124  066C  3007               	movlw	7
  1125  066D  1683               	bsf	3,5	;RP0=1, select bank1
  1126  066E  1303               	bcf	3,6	;RP1=0, select bank1
  1127  066F  0086               	movwf	6	;volatile
  1128  0670                     l693:	
  1129                           
  1130                           ;Lab2.c: 45:     TRISC=0;
  1131  0670  0187               	clrf	7	;volatile
  1132  0671                     l695:	
  1133                           
  1134                           ;Lab2.c: 46:     TRISD=0;
  1135  0671  0188               	clrf	8	;volatile
  1136  0672                     l697:	
  1137                           
  1138                           ;Lab2.c: 47:     PORTB=0;
  1139  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0674  0186               	clrf	6	;volatile
  1142  0675                     l699:	
  1143                           
  1144                           ;Lab2.c: 48:     PORTC=0;
  1145  0675  0187               	clrf	7	;volatile
  1146  0676                     l701:	
  1147                           
  1148                           ;Lab2.c: 49:     PORTD=0;
  1149  0676  0188               	clrf	8	;volatile
  1150  0677                     l33:	
  1151  0677  0008               	return
  1152  0678                     __end_of_configIO:	
  1153                           
  1154                           	psect	text4
  1155  0662                     __ptext4:	
  1156 ;; *************** function _configADC *****************
  1157 ;; Defined at:
  1158 ;;		line 8 in file "ADC.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _configADC
  1187  0662                     _configADC:	
  1188  0662                     l703:	
  1189                           ;incstack = 0
  1190                           ; Regs used in _configADC: [wreg+status,2+status,0]
  1191                           
  1192                           
  1193                           ;ADC.c: 9:     ADCON0bits.ADCS=1;
  1194  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0664  081F               	movf	31,w	;volatile
  1197  0665  393F               	andlw	-193
  1198  0666  3840               	iorlw	64
  1199  0667  009F               	movwf	31	;volatile
  1200  0668                     l705:	
  1201                           
  1202                           ;ADC.c: 10:     ADCON1=0;
  1203  0668  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0669  1303               	bcf	3,6	;RP1=0, select bank1
  1205  066A  019F               	clrf	31	;volatile
  1206  066B                     l54:	
  1207  066B  0008               	return
  1208  066C                     __end_of_configADC:	
  1209  007E                     btemp	set	126	;btemp
  1210  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lecADC
    _main->_segmentos

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              3 COMMON     1     1      0
                          _configADC
                           _configIO
                             _lecADC
                          _segmentos
 ---------------------------------------------------------------------------------
 (1) _segmentos                                            3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lecADC                                               3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configIO
   _lecADC
   _segmentos

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 23:43:07 2020

             __CFG_CP$OFF 0000                        l33 0677                        l60 0708  
                      l61 0715                        l54 066B                        l70 078A  
                      l62 0722                        l71 0797                        l63 072F  
                      l72 07A4                        l64 073C                        l65 0749  
                      l74 07FB                        l66 0756                        l58 06FD  
                      l82 06FA                        l67 0763                        l59 07E7  
                      l76 07F9                        l68 0770                        l69 077D  
                      u10 07F8                        u11 07F7                        u27 07EC  
                     l701 0676                       l703 0662                       l711 070E  
                     l705 0668                       l721 074F                       l713 071B  
                     l801 06AA                       l731 0790                       l723 075C  
                     l715 0728                       l707 06FC                       l733 079D  
                     l725 0769                       l717 0735                       l709 0703  
                     l813 06AE                       l735 07AA                       l727 0776  
                     l719 0742                       l743 07B3                       l831 06B4  
                     l807 06AC                       l745 07E8                       l737 07B1  
                     l729 0783                       l921 06C8                       l825 06B2  
                     l691 066C                       l755 07FA                       l747 07F1  
                     l923 07BB                       l843 06B8                       l819 06B0  
                     l771 06A0                       l763 069D                       l693 0670  
                     l749 07F4                       l861 06BE                       l837 06B6  
                     l765 069E                       l695 0671                       l855 06BC  
                     l783 06A4                       l697 0672                       l849 06BA  
                     l777 06A2                       l873 0678                       l699 0675  
                     l795 06A8                       l867 06C0                       l875 0682  
                     l789 06A6                       l877 068B                       l879 068F  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 0678                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FC  
            __end_of_main 069C           segmentos@numero 0072                    ??_main 0073  
                  _ADCON1 009F                    _ADRESH 001E            __CFG_PWRTE$OFF 0000  
        __end_of_configIO 0678                    _lecADC 06FB   __end_of__initialization 07FC  
          __pcstackCOMMON 0070        __size_of_configADC 000A                __pnvCOMMON 0074  
              __pmaintext 0678                   ?_lecADC 0070        __size_of_segmentos 005F  
               ?_configIO 0070         __end_of_configADC 066C           __size_of_lecADC 0101  
               _ANSELbits 0188                   __ptext1 069C                   __ptext2 06FB  
                 __ptext3 066C                   __ptext4 0662                   lecADC@x 0072  
                 _vanalog 0074                ??_configIO 0070      end_of_initialization 07FC  
       __end_of_segmentos 06FB                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISEbits 0089            __end_of_lecADC 07FC       start_initialization 07FC  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_lecADC 0070                 ___latbits 0002  
       __size_of_configIO 000C                 _configADC 0662                 _segmentos 069C  
              ?_configADC 0070                _ADCON0bits 001F                ?_segmentos 0070  
              _ANSELHbits 0189         __CFG_BOR4V$BOR40V 0000                  _configIO 066C  
           __size_of_main 0024               ??_configADC 0070               ??_segmentos 0070  
